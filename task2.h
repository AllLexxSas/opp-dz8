#pragma once
#include<iostream>

//2) Написать класс Ex, хранящий вещественное число x и имеющий конструктор по вещественному числу, инициализирующий x значением параметра.
//Написать класс Bar, хранящий вещественное число y (конструктор по умолчанию инициализирует его нулем) и имеющий метод set с единственным
//вещественным параметром a. Если y + a > 100, возбуждается исключение типа Ex с данными a*y, иначе в y заносится значение a.
//В функции main завести переменную класса Bar и в цикле в блоке try вводить с клавиатуры целое n. Использовать его в качестве параметра
//метода set до тех пор, пока не будет введено 0. В обработчике исключения выводить сообщение об ошибке, содержащее данные объекта
//исключения.


class Ex
{
private:
    double x;

public:
    Ex (double _x) : x(_x){}
    ~Ex(){}

    double outMessage()
    {
        return x;
    }

};

class Bar
{
private:
    double y;
public:
    Bar(){ y = 0;}

    void set(double a)
    {
        if ((y + a) > 100 )
            throw Ex(a*y);
        y = a;
    }
};


void task2()
{
    int a;
    Bar bar;

    try {
        while ( std::cin >> a )
        {
            if (a == 0)
                break;
            bar.set(static_cast<int>(a));
        }

    }  catch (Ex ex) {

        std::cout << "error" << ex.outMessage() << std::endl;

    }

}


